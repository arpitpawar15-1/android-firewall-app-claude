// Generated by view binder compiler. Do not edit!
package com.vpnfirewall.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.materialswitch.MaterialSwitch;
import com.vpnfirewall.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAppsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton fabVpnToggle;

  @NonNull
  public final RecyclerView recyclerViewApps;

  @NonNull
  public final MaterialSwitch switchFilterMode;

  @NonNull
  public final TextView textFilterMode;

  @NonNull
  public final MaterialToolbar toolbar;

  private FragmentAppsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton fabVpnToggle, @NonNull RecyclerView recyclerViewApps,
      @NonNull MaterialSwitch switchFilterMode, @NonNull TextView textFilterMode,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.fabVpnToggle = fabVpnToggle;
    this.recyclerViewApps = recyclerViewApps;
    this.switchFilterMode = switchFilterMode;
    this.textFilterMode = textFilterMode;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAppsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAppsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_apps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAppsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fab_vpn_toggle;
      FloatingActionButton fabVpnToggle = ViewBindings.findChildViewById(rootView, id);
      if (fabVpnToggle == null) {
        break missingId;
      }

      id = R.id.recycler_view_apps;
      RecyclerView recyclerViewApps = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewApps == null) {
        break missingId;
      }

      id = R.id.switch_filter_mode;
      MaterialSwitch switchFilterMode = ViewBindings.findChildViewById(rootView, id);
      if (switchFilterMode == null) {
        break missingId;
      }

      id = R.id.text_filter_mode;
      TextView textFilterMode = ViewBindings.findChildViewById(rootView, id);
      if (textFilterMode == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentAppsBinding((CoordinatorLayout) rootView, fabVpnToggle, recyclerViewApps,
          switchFilterMode, textFilterMode, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
